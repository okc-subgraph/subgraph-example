// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ApproveProxyChanged extends ethereum.Event {
  get params(): ApproveProxyChanged__Params {
    return new ApproveProxyChanged__Params(this);
  }
}

export class ApproveProxyChanged__Params {
  _event: ApproveProxyChanged;

  constructor(event: ApproveProxyChanged) {
    this._event = event;
  }

  get approveProxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OperatorChanged extends ethereum.Event {
  get params(): OperatorChanged__Params {
    return new OperatorChanged__Params(this);
  }
}

export class OperatorChanged__Params {
  _event: OperatorChanged;

  constructor(event: OperatorChanged) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OrderRecord extends ethereum.Event {
  get params(): OrderRecord__Params {
    return new OrderRecord__Params(this);
  }
}

export class OrderRecord__Params {
  _event: OrderRecord;

  constructor(event: OrderRecord) {
    this._event = event;
  }

  get fromToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get toToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get fromAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get returnAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PMMFeeConfigChanged extends ethereum.Event {
  get params(): PMMFeeConfigChanged__Params {
    return new PMMFeeConfigChanged__Params(this);
  }
}

export class PMMFeeConfigChanged__Params {
  _event: PMMFeeConfigChanged;

  constructor(event: PMMFeeConfigChanged) {
    this._event = event;
  }

  get _sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _feeRateAndReceiver(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PriceProtected extends ethereum.Event {
  get params(): PriceProtected__Params {
    return new PriceProtected__Params(this);
  }
}

export class PriceProtected__Params {
  _event: PriceProtected;

  constructor(event: PriceProtected) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get protectedAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SwapOrderId extends ethereum.Event {
  get params(): SwapOrderId__Params {
    return new SwapOrderId__Params(this);
  }
}

export class SwapOrderId__Params {
  _event: SwapOrderId;

  constructor(event: SwapOrderId) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class WNativeRelayerChanged extends ethereum.Event {
  get params(): WNativeRelayerChanged__Params {
    return new WNativeRelayerChanged__Params(this);
  }
}

export class WNativeRelayerChanged__Params {
  _event: WNativeRelayerChanged;

  constructor(event: WNativeRelayerChanged) {
    this._event = event;
  }

  get wNativeRelayer(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class XBridgeChanged extends ethereum.Event {
  get params(): XBridgeChanged__Params {
    return new XBridgeChanged__Params(this);
  }
}

export class XBridgeChanged__Params {
  _event: XBridgeChanged;

  constructor(event: XBridgeChanged) {
    this._event = event;
  }

  get newXBridge(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DexRouter extends ethereum.SmartContract {
  static bind(address: Address): DexRouter {
    return new DexRouter("DexRouter", address);
  }

  _ADDRESS_MASK(): BigInt {
    let result = super.call("_ADDRESS_MASK", "_ADDRESS_MASK():(uint256)", []);

    return result[0].toBigInt();
  }

  try__ADDRESS_MASK(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_ADDRESS_MASK",
      "_ADDRESS_MASK():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _APPROVE_PROXY(): Address {
    let result = super.call("_APPROVE_PROXY", "_APPROVE_PROXY():(address)", []);

    return result[0].toAddress();
  }

  try__APPROVE_PROXY(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "_APPROVE_PROXY",
      "_APPROVE_PROXY():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _REVERSE_MASK(): BigInt {
    let result = super.call("_REVERSE_MASK", "_REVERSE_MASK():(uint256)", []);

    return result[0].toBigInt();
  }

  try__REVERSE_MASK(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_REVERSE_MASK",
      "_REVERSE_MASK():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _WETH(): Address {
    let result = super.call("_WETH", "_WETH():(address)", []);

    return result[0].toAddress();
  }

  try__WETH(): ethereum.CallResult<Address> {
    let result = super.tryCall("_WETH", "_WETH():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _WNATIVE_RELAY(): Address {
    let result = super.call("_WNATIVE_RELAY", "_WNATIVE_RELAY():(address)", []);

    return result[0].toAddress();
  }

  try__WNATIVE_RELAY(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "_WNATIVE_RELAY",
      "_WNATIVE_RELAY():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  approveProxy(): Address {
    let result = super.call("approveProxy", "approveProxy():(address)", []);

    return result[0].toAddress();
  }

  try_approveProxy(): ethereum.CallResult<Address> {
    let result = super.tryCall("approveProxy", "approveProxy():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeRateAndReceiver(): BigInt {
    let result = super.call(
      "feeRateAndReceiver",
      "feeRateAndReceiver():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_feeRateAndReceiver(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "feeRateAndReceiver",
      "feeRateAndReceiver():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  operator(param0: Address): Address {
    let result = super.call("operator", "operator(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_operator(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("operator", "operator(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  orderRemaining(param0: Bytes): BigInt {
    let result = super.call(
      "orderRemaining",
      "orderRemaining(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toBigInt();
  }

  try_orderRemaining(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "orderRemaining",
      "orderRemaining(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  uniswapV3SwapToWithPermit(
    recipient: BigInt,
    srcToken: Address,
    amount: BigInt,
    minReturn: BigInt,
    pools: Array<BigInt>,
    permit: Bytes
  ): BigInt {
    let result = super.call(
      "uniswapV3SwapToWithPermit",
      "uniswapV3SwapToWithPermit(uint256,address,uint256,uint256,uint256[],bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(recipient),
        ethereum.Value.fromAddress(srcToken),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(minReturn),
        ethereum.Value.fromUnsignedBigIntArray(pools),
        ethereum.Value.fromBytes(permit)
      ]
    );

    return result[0].toBigInt();
  }

  try_uniswapV3SwapToWithPermit(
    recipient: BigInt,
    srcToken: Address,
    amount: BigInt,
    minReturn: BigInt,
    pools: Array<BigInt>,
    permit: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "uniswapV3SwapToWithPermit",
      "uniswapV3SwapToWithPermit(uint256,address,uint256,uint256,uint256[],bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(recipient),
        ethereum.Value.fromAddress(srcToken),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(minReturn),
        ethereum.Value.fromUnsignedBigIntArray(pools),
        ethereum.Value.fromBytes(permit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  wNativeRelayer(): Address {
    let result = super.call("wNativeRelayer", "wNativeRelayer():(address)", []);

    return result[0].toAddress();
  }

  try_wNativeRelayer(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "wNativeRelayer",
      "wNativeRelayer():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  xBridge(): Address {
    let result = super.call("xBridge", "xBridge():(address)", []);

    return result[0].toAddress();
  }

  try_xBridge(): ethereum.CallResult<Address> {
    let result = super.tryCall("xBridge", "xBridge():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class PMMV2SwapCall extends ethereum.Call {
  get inputs(): PMMV2SwapCall__Inputs {
    return new PMMV2SwapCall__Inputs(this);
  }

  get outputs(): PMMV2SwapCall__Outputs {
    return new PMMV2SwapCall__Outputs(this);
  }
}

export class PMMV2SwapCall__Inputs {
  _call: PMMV2SwapCall;

  constructor(call: PMMV2SwapCall) {
    this._call = call;
  }

  get orderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get baseRequest(): PMMV2SwapCallBaseRequestStruct {
    return this._call.inputValues[1].value.toTuple() as PMMV2SwapCallBaseRequestStruct;
  }

  get request(): PMMV2SwapCallRequestStruct {
    return this._call.inputValues[2].value.toTuple() as PMMV2SwapCallRequestStruct;
  }
}

export class PMMV2SwapCall__Outputs {
  _call: PMMV2SwapCall;

  constructor(call: PMMV2SwapCall) {
    this._call = call;
  }

  get returnAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PMMV2SwapCallBaseRequestStruct extends ethereum.Tuple {
  get fromTokenAmount(): BigInt {
    return this[0].toBigInt();
  }

  get minReturnAmount(): BigInt {
    return this[1].toBigInt();
  }

  get deadLine(): BigInt {
    return this[2].toBigInt();
  }

  get fromNative(): boolean {
    return this[3].toBoolean();
  }

  get toNative(): boolean {
    return this[4].toBoolean();
  }
}

export class PMMV2SwapCallRequestStruct extends ethereum.Tuple {
  get pathIndex(): BigInt {
    return this[0].toBigInt();
  }

  get payer(): Address {
    return this[1].toAddress();
  }

  get fromToken(): Address {
    return this[2].toAddress();
  }

  get toToken(): Address {
    return this[3].toAddress();
  }

  get fromTokenAmountMax(): BigInt {
    return this[4].toBigInt();
  }

  get toTokenAmountMax(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get deadLine(): BigInt {
    return this[7].toBigInt();
  }

  get isPushOrder(): boolean {
    return this[8].toBoolean();
  }

  get extension(): Bytes {
    return this[9].toBytes();
  }
}

export class PMMV2SwapByInvestCall extends ethereum.Call {
  get inputs(): PMMV2SwapByInvestCall__Inputs {
    return new PMMV2SwapByInvestCall__Inputs(this);
  }

  get outputs(): PMMV2SwapByInvestCall__Outputs {
    return new PMMV2SwapByInvestCall__Outputs(this);
  }
}

export class PMMV2SwapByInvestCall__Inputs {
  _call: PMMV2SwapByInvestCall;

  constructor(call: PMMV2SwapByInvestCall) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get baseRequest(): PMMV2SwapByInvestCallBaseRequestStruct {
    return this._call.inputValues[1].value.toTuple() as PMMV2SwapByInvestCallBaseRequestStruct;
  }

  get request(): PMMV2SwapByInvestCallRequestStruct {
    return this._call.inputValues[2].value.toTuple() as PMMV2SwapByInvestCallRequestStruct;
  }
}

export class PMMV2SwapByInvestCall__Outputs {
  _call: PMMV2SwapByInvestCall;

  constructor(call: PMMV2SwapByInvestCall) {
    this._call = call;
  }

  get returnAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PMMV2SwapByInvestCallBaseRequestStruct extends ethereum.Tuple {
  get fromTokenAmount(): BigInt {
    return this[0].toBigInt();
  }

  get minReturnAmount(): BigInt {
    return this[1].toBigInt();
  }

  get deadLine(): BigInt {
    return this[2].toBigInt();
  }

  get fromNative(): boolean {
    return this[3].toBoolean();
  }

  get toNative(): boolean {
    return this[4].toBoolean();
  }
}

export class PMMV2SwapByInvestCallRequestStruct extends ethereum.Tuple {
  get pathIndex(): BigInt {
    return this[0].toBigInt();
  }

  get payer(): Address {
    return this[1].toAddress();
  }

  get fromToken(): Address {
    return this[2].toAddress();
  }

  get toToken(): Address {
    return this[3].toAddress();
  }

  get fromTokenAmountMax(): BigInt {
    return this[4].toBigInt();
  }

  get toTokenAmountMax(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get deadLine(): BigInt {
    return this[7].toBigInt();
  }

  get isPushOrder(): boolean {
    return this[8].toBoolean();
  }

  get extension(): Bytes {
    return this[9].toBytes();
  }
}

export class PMMV2SwapByXBridgeCall extends ethereum.Call {
  get inputs(): PMMV2SwapByXBridgeCall__Inputs {
    return new PMMV2SwapByXBridgeCall__Inputs(this);
  }

  get outputs(): PMMV2SwapByXBridgeCall__Outputs {
    return new PMMV2SwapByXBridgeCall__Outputs(this);
  }
}

export class PMMV2SwapByXBridgeCall__Inputs {
  _call: PMMV2SwapByXBridgeCall;

  constructor(call: PMMV2SwapByXBridgeCall) {
    this._call = call;
  }

  get orderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get baseRequest(): PMMV2SwapByXBridgeCallBaseRequestStruct {
    return this._call.inputValues[1].value.toTuple() as PMMV2SwapByXBridgeCallBaseRequestStruct;
  }

  get request(): PMMV2SwapByXBridgeCallRequestStruct {
    return this._call.inputValues[2].value.toTuple() as PMMV2SwapByXBridgeCallRequestStruct;
  }
}

export class PMMV2SwapByXBridgeCall__Outputs {
  _call: PMMV2SwapByXBridgeCall;

  constructor(call: PMMV2SwapByXBridgeCall) {
    this._call = call;
  }

  get returnAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PMMV2SwapByXBridgeCallBaseRequestStruct extends ethereum.Tuple {
  get fromTokenAmount(): BigInt {
    return this[0].toBigInt();
  }

  get minReturnAmount(): BigInt {
    return this[1].toBigInt();
  }

  get deadLine(): BigInt {
    return this[2].toBigInt();
  }

  get fromNative(): boolean {
    return this[3].toBoolean();
  }

  get toNative(): boolean {
    return this[4].toBoolean();
  }
}

export class PMMV2SwapByXBridgeCallRequestStruct extends ethereum.Tuple {
  get pathIndex(): BigInt {
    return this[0].toBigInt();
  }

  get payer(): Address {
    return this[1].toAddress();
  }

  get fromToken(): Address {
    return this[2].toAddress();
  }

  get toToken(): Address {
    return this[3].toAddress();
  }

  get fromTokenAmountMax(): BigInt {
    return this[4].toBigInt();
  }

  get toTokenAmountMax(): BigInt {
    return this[5].toBigInt();
  }

  get salt(): BigInt {
    return this[6].toBigInt();
  }

  get deadLine(): BigInt {
    return this[7].toBigInt();
  }

  get isPushOrder(): boolean {
    return this[8].toBoolean();
  }

  get extension(): Bytes {
    return this[9].toBytes();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _feeRateAndReceiver(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetApproveProxyCall extends ethereum.Call {
  get inputs(): SetApproveProxyCall__Inputs {
    return new SetApproveProxyCall__Inputs(this);
  }

  get outputs(): SetApproveProxyCall__Outputs {
    return new SetApproveProxyCall__Outputs(this);
  }
}

export class SetApproveProxyCall__Inputs {
  _call: SetApproveProxyCall;

  constructor(call: SetApproveProxyCall) {
    this._call = call;
  }

  get newApproveProxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetApproveProxyCall__Outputs {
  _call: SetApproveProxyCall;

  constructor(call: SetApproveProxyCall) {
    this._call = call;
  }
}

export class SetOperatorCall extends ethereum.Call {
  get inputs(): SetOperatorCall__Inputs {
    return new SetOperatorCall__Inputs(this);
  }

  get outputs(): SetOperatorCall__Outputs {
    return new SetOperatorCall__Outputs(this);
  }
}

export class SetOperatorCall__Inputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOperatorCall__Outputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }
}

export class SetPMMFeeConfigCall extends ethereum.Call {
  get inputs(): SetPMMFeeConfigCall__Inputs {
    return new SetPMMFeeConfigCall__Inputs(this);
  }

  get outputs(): SetPMMFeeConfigCall__Outputs {
    return new SetPMMFeeConfigCall__Outputs(this);
  }
}

export class SetPMMFeeConfigCall__Inputs {
  _call: SetPMMFeeConfigCall;

  constructor(call: SetPMMFeeConfigCall) {
    this._call = call;
  }

  get _feeRateAndReceiver(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPMMFeeConfigCall__Outputs {
  _call: SetPMMFeeConfigCall;

  constructor(call: SetPMMFeeConfigCall) {
    this._call = call;
  }
}

export class SetWNativeRelayerCall extends ethereum.Call {
  get inputs(): SetWNativeRelayerCall__Inputs {
    return new SetWNativeRelayerCall__Inputs(this);
  }

  get outputs(): SetWNativeRelayerCall__Outputs {
    return new SetWNativeRelayerCall__Outputs(this);
  }
}

export class SetWNativeRelayerCall__Inputs {
  _call: SetWNativeRelayerCall;

  constructor(call: SetWNativeRelayerCall) {
    this._call = call;
  }

  get relayer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWNativeRelayerCall__Outputs {
  _call: SetWNativeRelayerCall;

  constructor(call: SetWNativeRelayerCall) {
    this._call = call;
  }
}

export class SetXBridgeCall extends ethereum.Call {
  get inputs(): SetXBridgeCall__Inputs {
    return new SetXBridgeCall__Inputs(this);
  }

  get outputs(): SetXBridgeCall__Outputs {
    return new SetXBridgeCall__Outputs(this);
  }
}

export class SetXBridgeCall__Inputs {
  _call: SetXBridgeCall;

  constructor(call: SetXBridgeCall) {
    this._call = call;
  }

  get newXBridge(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetXBridgeCall__Outputs {
  _call: SetXBridgeCall;

  constructor(call: SetXBridgeCall) {
    this._call = call;
  }
}

export class SmartSwapByOrderIdByXBridgeCall extends ethereum.Call {
  get inputs(): SmartSwapByOrderIdByXBridgeCall__Inputs {
    return new SmartSwapByOrderIdByXBridgeCall__Inputs(this);
  }

  get outputs(): SmartSwapByOrderIdByXBridgeCall__Outputs {
    return new SmartSwapByOrderIdByXBridgeCall__Outputs(this);
  }
}

export class SmartSwapByOrderIdByXBridgeCall__Inputs {
  _call: SmartSwapByOrderIdByXBridgeCall;

  constructor(call: SmartSwapByOrderIdByXBridgeCall) {
    this._call = call;
  }

  get orderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get baseRequest(): SmartSwapByOrderIdByXBridgeCallBaseRequestStruct {
    return this._call.inputValues[1].value.toTuple() as SmartSwapByOrderIdByXBridgeCallBaseRequestStruct;
  }

  get batchesAmount(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class SmartSwapByOrderIdByXBridgeCall__Outputs {
  _call: SmartSwapByOrderIdByXBridgeCall;

  constructor(call: SmartSwapByOrderIdByXBridgeCall) {
    this._call = call;
  }

  get returnAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SmartSwapByOrderIdByXBridgeCallBaseRequestStruct extends ethereum.Tuple {
  get fromToken(): BigInt {
    return this[0].toBigInt();
  }

  get toToken(): Address {
    return this[1].toAddress();
  }

  get fromTokenAmount(): BigInt {
    return this[2].toBigInt();
  }

  get minReturnAmount(): BigInt {
    return this[3].toBigInt();
  }

  get deadLine(): BigInt {
    return this[4].toBigInt();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UniswapV3SwapCallbackCall extends ethereum.Call {
  get inputs(): UniswapV3SwapCallbackCall__Inputs {
    return new UniswapV3SwapCallbackCall__Inputs(this);
  }

  get outputs(): UniswapV3SwapCallbackCall__Outputs {
    return new UniswapV3SwapCallbackCall__Outputs(this);
  }
}

export class UniswapV3SwapCallbackCall__Inputs {
  _call: UniswapV3SwapCallbackCall;

  constructor(call: UniswapV3SwapCallbackCall) {
    this._call = call;
  }

  get amount0Delta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount1Delta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get value2(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class UniswapV3SwapCallbackCall__Outputs {
  _call: UniswapV3SwapCallbackCall;

  constructor(call: UniswapV3SwapCallbackCall) {
    this._call = call;
  }
}

export class UniswapV3SwapToCall extends ethereum.Call {
  get inputs(): UniswapV3SwapToCall__Inputs {
    return new UniswapV3SwapToCall__Inputs(this);
  }

  get outputs(): UniswapV3SwapToCall__Outputs {
    return new UniswapV3SwapToCall__Outputs(this);
  }
}

export class UniswapV3SwapToCall__Inputs {
  _call: UniswapV3SwapToCall;

  constructor(call: UniswapV3SwapToCall) {
    this._call = call;
  }

  get recipient(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get minReturn(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get pools(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class UniswapV3SwapToCall__Outputs {
  _call: UniswapV3SwapToCall;

  constructor(call: UniswapV3SwapToCall) {
    this._call = call;
  }

  get returnAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class UniswapV3SwapToByXBridgeCall extends ethereum.Call {
  get inputs(): UniswapV3SwapToByXBridgeCall__Inputs {
    return new UniswapV3SwapToByXBridgeCall__Inputs(this);
  }

  get outputs(): UniswapV3SwapToByXBridgeCall__Outputs {
    return new UniswapV3SwapToByXBridgeCall__Outputs(this);
  }
}

export class UniswapV3SwapToByXBridgeCall__Inputs {
  _call: UniswapV3SwapToByXBridgeCall;

  constructor(call: UniswapV3SwapToByXBridgeCall) {
    this._call = call;
  }

  get recipient(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get minReturn(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get pools(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class UniswapV3SwapToByXBridgeCall__Outputs {
  _call: UniswapV3SwapToByXBridgeCall;

  constructor(call: UniswapV3SwapToByXBridgeCall) {
    this._call = call;
  }

  get returnAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class UniswapV3SwapToWithPermitCall extends ethereum.Call {
  get inputs(): UniswapV3SwapToWithPermitCall__Inputs {
    return new UniswapV3SwapToWithPermitCall__Inputs(this);
  }

  get outputs(): UniswapV3SwapToWithPermitCall__Outputs {
    return new UniswapV3SwapToWithPermitCall__Outputs(this);
  }
}

export class UniswapV3SwapToWithPermitCall__Inputs {
  _call: UniswapV3SwapToWithPermitCall;

  constructor(call: UniswapV3SwapToWithPermitCall) {
    this._call = call;
  }

  get recipient(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get srcToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get minReturn(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get pools(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get permit(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class UniswapV3SwapToWithPermitCall__Outputs {
  _call: UniswapV3SwapToWithPermitCall;

  constructor(call: UniswapV3SwapToWithPermitCall) {
    this._call = call;
  }

  get returnAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class UnxswapByOrderIdCall extends ethereum.Call {
  get inputs(): UnxswapByOrderIdCall__Inputs {
    return new UnxswapByOrderIdCall__Inputs(this);
  }

  get outputs(): UnxswapByOrderIdCall__Outputs {
    return new UnxswapByOrderIdCall__Outputs(this);
  }
}

export class UnxswapByOrderIdCall__Inputs {
  _call: UnxswapByOrderIdCall;

  constructor(call: UnxswapByOrderIdCall) {
    this._call = call;
  }

  get srcToken(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get minReturn(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get pools(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }
}

export class UnxswapByOrderIdCall__Outputs {
  _call: UnxswapByOrderIdCall;

  constructor(call: UnxswapByOrderIdCall) {
    this._call = call;
  }

  get returnAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class UnxswapByOrderIdByXBridgeCall extends ethereum.Call {
  get inputs(): UnxswapByOrderIdByXBridgeCall__Inputs {
    return new UnxswapByOrderIdByXBridgeCall__Inputs(this);
  }

  get outputs(): UnxswapByOrderIdByXBridgeCall__Outputs {
    return new UnxswapByOrderIdByXBridgeCall__Outputs(this);
  }
}

export class UnxswapByOrderIdByXBridgeCall__Inputs {
  _call: UnxswapByOrderIdByXBridgeCall;

  constructor(call: UnxswapByOrderIdByXBridgeCall) {
    this._call = call;
  }

  get srcToken(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get minReturn(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get pools(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }
}

export class UnxswapByOrderIdByXBridgeCall__Outputs {
  _call: UnxswapByOrderIdByXBridgeCall;

  constructor(call: UnxswapByOrderIdByXBridgeCall) {
    this._call = call;
  }

  get returnAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
